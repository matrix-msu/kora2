<?php
/*
Copyright (2008) Matrix: Michigan State University

This file is part of KORA.

KORA is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

KORA is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Initial Version: Rob Allie, 2010
// Refactor: James Green, 2014
// Refactor: Joe Deming, Anthony D'Onofrio 2013
	
//GET pid, sid, rid. make kid #-#-#
$pid = $_REQUEST['pid'];
$sid = $_REQUEST['sid'];
$rid = $_REQUEST['rid'];
$kid = $rid;

require_once('includes/includes.php');

Manager::Init();

Manager::RequireLogin();
Manager::RequireProject(); //THIS IS WHERE IT PUKES AND DIES <-- 
Manager::RequireScheme();
// verify MODERATOR permission
Manager::RequirePermissions(INGEST_RECORD,
'schemeLayout.php?pid='.Manager::GetProject()->GetPID().'&sid='.Manager::GetScheme()->GetSID());

$approved = ($_REQUEST['approved'] == '1') ? true : false;
$dbError = false;
$deleteAllRecords = false;

global $db;
echo "pid: " . $rid . '<br/>';

$ridQuery = "WHERE id='".$rid."'";
if($rid == "all")
{
	//User clicked Deny All from reviewPublicIngestions, so we don't want to access individual record IDs.
	$deleteAllRecords = true;	
	$ridQuery = "";
}

//Getting data to ingest, all this is old code but I'm keeping it for now -JG

//query data from public table
$dataTable = 'p'.$pid.'PublicData';
$publicQuery = "SELECT * FROM ".$dataTable." ".$ridQuery;
$datas = $db->query($publicQuery);

//get collection type from control table and built array with data
$typeArray = array();
$dataTable = 'p'.$pid.'Control';
$types = $db->query("SELECT cid, schemeid, type FROM ".$dataTable." WHERE schemeid=".$sid);
while($type = $types->fetch_assoc())
{
	$typeArray[$type['cid']] = $type['type'];
}

//create an array with cid and value for each control 
$dataArray = array();//holds the data to be inserted into the db
$filePaths = array();//holds the file paths to be deleted later
$fileError = array();//holds the new file paths to be deleted upon an error
$i=0;
while($data = $datas->fetch_assoc())
{
	if($typeArray[$data['cid']]=="ImageControl" || $typeArray[$data['cid']]=="FileControl") //this will cause problems
	{
		$controlType = $typeArray[$data['cid']]=="ImageControl";
		$fileArray = array();
		$fileValue = $data['value'];
		$p = xml_parser_create();
    	xml_parse_into_struct($p, $fileValue, $vals, $index);
    	foreach($vals as $val)
    	{
    		if(array_key_exists('value', $val))
    		{
    			$fileArray[$val['tag']] = $val['value'];
    		}
    	}
    	// information about the current files (awaiting approval)
    	$oldLocalName = $fileArray['LOCALNAME'];
        $path = basePath.awaitingApprovalFileDir; //do these still exist?
    	$oldPath = $path.$pid."/".$sid."/";
    	$oldThumbPath = $oldPath."thumbs/";
		
    	if($approved)
    	{
	    	$originalName = $fileArray['ORIGINALNAME'];
	    	$localName = $kid."-".$data['cid']."-".$originalName;
	    	$size = $fileArray["SIZE"];
	    	$type = $fileArray["TYPE"];
	    	$newXML = "<file><originalName>".$originalName."</originalName><localName>".$localName.
	    			"</localName><size>".$size."</size><type>".$type."</type></file>";
	    	$dataArray[$i]['cid'] = $data['cid'];
	    	$dataArray[$i]['value'] = $newXML;
		}
    	
    	//copy files to appropriate directory
    	$newPath = basePath.fileDir.$pid."/".$sid."/";
    	$projPath = basePath.fileDir.$pid."/";
    	$newThumbPath = $newPath."thumbs/";
    	
    	// we must make directories if they don't exist
    	if(!file_exists($projPath))
    	{
    		mkdir($projPath);
    	}
    	if(!file_exists($newPath))
    	{
    		mkdir($newPath);
    	}
    	// only the Image Control creates thumbs for its files
    	if($controlType == "ImageControl")
    	{
			if(!file_exists($newThumbPath))
	    	{
	    		mkdir($newThumbPath);
	    	}
    	}
    	if($approved)
    	{
    		$copied = copy($oldPath.$oldLocalName, $newPath.$localName);//copy file over
    		$fileError[] = $newPath.$localName;
    	}
    	$filePaths[] = $oldPath.$oldLocalName;
    	if($controlType == "ImageControl")
    	{
    		if($approved)
    		{
    			$copied = copy($oldThumbPath.$oldLocalName, $newThumbPath.$localName);//copy thumb over
    			$fileError[] = $newThumbPath.$localName;
    		}
    		$filePaths[] = $oldThumbPath.$oldLocalName;
    	}
	}
	else//all non file/image control tyes
	{
		$dataArray[$i]['cid'] = $data['cid'];
		$dataArray[$i]['value'] = $data['value'];
	}
	$i++;
}

if($approved)
{	
	//update the regular data table
	$dataTable = 'p'.$pid.'Data';
	$success = true;
	foreach($dataArray as $d)
	{
		
		$cid = $d['cid'];
		$value = $d['value'];
		echo 'Inset into '.$dataTable. ' id: '. $kid .' cid: ' . $cid.' schemeid: ' . $sid.' value: ' . $value .'<br>';
		$result = $db->query("INSERT INTO ".$dataTable." (id, cid, schemeid, value)
					VALUES ('".$kid."', '".$cid."', '".$sid."', ".escape($value).")");
		
		if(!$result)
		{
			echo gettext("A database error has occurred. Please refresh the page and try again. 1") . '<br>';
			$dbError = true;
			//in the case of a db error, we should delete the files that were copied over
			foreach($fileError as $f)
			{
				unlink($f);
			}
			$success = false;
		}
	}
	
	if($success)
	{
		$incQuery = "UPDATE scheme SET nextid = nextid + 1 WHERE schemeid=".$sid;
		$incResult = $db->query($incQuery);
		if(!$incResult)
		{
			echo gettext("A database error has occured. Scheme nextid failed to increment") . '<br>';
		}
	}
}

//if no db error, delete the record from the public db and the old files
if(!$dbError)
{
	// whether we ingested the data or not, we need to delete it from the public database.
	$dataTable = 'p'.$pid.'PublicData';
	
	if($deleteAllRecords)
	{
		//delete all records from PublicData
		
		$deleteQuery = "DELETE FROM ".$dataTable." WHERE schemeid=".$sid;
		var_dump($deleteQuery);
	}
	else
	{
		//delete an individual record from PublicData
		$rid = '"' . $rid . '"';
		echo 'Deleting at id = ' . $rid . '<br>';
		var_dump($rid);
		$deleteQuery = "DELETE FROM ".$dataTable." WHERE id=".$rid;
		var_dump($deleteQuery);
	}
	$result = $db->query($deleteQuery);
	if(!$result)
	{
		echo gettext("A database error has occurred. Please refresh the page and try again. 2") . '<br>';
		$dbError = true;
	}
	else
	{
		//delete files
		foreach($filePaths as $fileToDelete)
		{
			unlink($fileToDelete);
		}
	}
	
	//msg to return
	if($approved)
	{
		echo "<br /><strong>".gettext('Record Approved')."</strong><br /><br />";
		$return = "Record Approved";
	}
	else
	{
		if($deleteAllRecords) 
		{
			echo "<br /><strong>".gettext('All Records Denied and Erased')."</strong><br /><br />";
			$return = "All Records Denied and Erased";
		}
		else if($result)
		{
			echo "<br /><strong>".gettext('Record Denied and Erased')."</strong><br /><br />";
			$return = "Record Denied and Erased";
		}
		else
		{
			echo "<br /><strong>".gettext('ERROR: Record Not Denied or Erased')."</strong><br /><br />";
			$return = "Record Not Denied or Erased";
		}
	}
	
}

