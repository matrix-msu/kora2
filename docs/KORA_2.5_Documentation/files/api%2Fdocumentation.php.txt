<style type="text/css">
body
{
    font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;
    background: #8d939e;
}
.api_call
{
    margin: 24px 16px;
    padding: none;
    border: 2px black solid;
}
.api_call_header
{
    margin: 0px;
    background: #ddd;
    border-bottom: 1px black solid;
    padding: 8px;
    font-size: larger;
}
.api_call_body
{
    background: #fff;
    padding: 8px;
    font-size: smaller;
}
.sub_header
{
    display: block;
    margin: 2px;
    font-size: larger;
    font-weight: bolder;
}
.sub_section
{
    padding: 0px 12px;
}
.sub_section dl
{
    display: block;
}
.sub_section dl dt
{
    display: inline;
    font-size: larger;
    margin: 4px;
    font-weight: bolder;
}
.sub_section dl dd
{
    display: inline;
}

.api_example
{
    margin: 8px;
    padding: 8px;
    border: 1px dashed;
    background: #FEF;
    font-family: Courier;
}
</style>
    
<?php
require_once('apiutils.php');
$api_files = array("search.php");
$docs = array();
foreach($api_files as $i)
{
    api_doc_parse($i);
}

function api_doc_parse($filename)
{
    if(!file_exists($filename))
        return;
    $contents = explode("\n", file_get_contents($filename));
    $comments = "";
    foreach($contents as $line)
    {
        $line = trim($line);
        if(substr($line, 0, 3) == "///")
        	$comments .= str_replace('&', '&amp;', trim(substr($line, 3, strlen($line) - 3)) . "\n");
    }
    $obj = simplexml_load_string($comments);
    if(!isset($obj->kora_api_call))
    {
        return;
    }
    foreach($obj->kora_api_call as $apifunc)
    {
        $s = '';
        $s .= "\n\t" . '<div class="api_call">';
        $s .= "\n\t" . '  <div class="api_call_header">';
        $s .= "\n\t" . '    '.getAttr($apifunc, 'title');
        $s .= "\n\t" . '  </div>';
        $s .= "\n\t" . '  <div class="api_call_body">';
        $s .= "\n\t" . '  '.$apifunc->description;
        $s .= "\n\t" . '    <br /><br />';
        
        #arguments
        if(sizeof($apifunc->arguments->argument))
        {
            $s .= "\n\t" . '    <span class="sub_header">Arguments:</span>';
            $s .= "\n\t" . '    <div class="sub_section"><dl>';
            foreach($apifunc->arguments->argument as $arg)
            {
                $s .= "\n\t\t" . "<dt>".getAttr($arg, "name").":</dt>";
                if(getAttr($arg, "required") == "true")
                    $s .= "\n\t\t" . "<i>[Required] </i>";
                $s .= getAttr($arg, "description");
                $s .= "\n\t\t" . "</dd><br />";
            }
            $s .= "\n\t" . "</dl>";
            $s .= "\n\t" . '    </div>';
        }
        
        #result fields
        if(sizeof($apifunc->result_fields->field))
        {
            $s .= '    <span class="sub_header">Result Fields:</span>';
            $s .= '    <div class="sub_section"><dl>';
            foreach($apifunc->result_fields->field as $field)
            {
                $s .= "<dt>".getAttr($field, "name").":</dt>";
                $s .= "<i>[".getAttr($field, "type")."] </i>";
                $s .= getAttr($field, "description");
                $s .= "</dd><br />";
            }
            $s .= '    </div>';
        }
        
        #examples
        if(sizeof($apifunc->examples->example))
        {
            $s .= '    <span class="sub_header">Examples:</span>';
            $s .= '    <div class="sub_section">';
            foreach($apifunc->examples->example as $x) 
            {
                $xml = str_replace(">", "&gt;", str_replace("<", "&lt;", $x->result->children()->asXML()));
                $xml = str_replace("\n", "<br />", $xml);
                $s .= '  <div class="api_example">URL: '.getAttr($x, "url_stub").'<br /><br />';
                $s .= $xml;
                $s .= '  </div>';
            }
            $s .= '    </div>';
        }
        
        $s .= '  </div>';        
        $s .= '</div>';
        echo $s;
    }
}

function getAttr($obj, $name)
{
    $attr = $obj->attributes();
    if(isset($attr[$name]))
        return (string)$attr[$name];
    return "";
}
?>
